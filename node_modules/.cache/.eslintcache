<<<<<<< HEAD
[{"/Users/jessicaliu/costgo/src/index.js":"1","/Users/jessicaliu/costgo/src/reportWebVitals.js":"2","/Users/jessicaliu/costgo/src/App.js":"3","/Users/jessicaliu/costgo/src/components/Header.jsx":"4","/Users/jessicaliu/costgo/src/components/Path.jsx":"5","/Users/jessicaliu/costgo/src/components/sample.jsx":"6","/Users/jessicaliu/costgo/src/components/Content.jsx":"7","/Users/jessicaliu/costgo/src/components/Inventory.jsx":"8","/Users/jessicaliu/costgo/src/components/shortestPathFinder.js":"9","/Users/jessicaliu/costgo/src/components/Direction.jsx":"10","/Users/jessicaliu/costgo/src/components/Button.jsx":"11","/Users/jessicaliu/costgo/src/components/Item.jsx":"12","/Users/jessicaliu/costgo/src/components/Images.jsx":"13","/Users/jessicaliu/costgo/src/components/Checkbox.jsx":"14","/Users/jessicaliu/costgo/src/components/Emoji.jsx":"15","/Users/jessicaliu/costgo/src/components/Error.jsx":"16"},{"size":500,"mtime":1625677271753,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1625671873779,"results":"19","hashOfConfig":"18"},{"size":708,"mtime":1625690404994,"results":"20","hashOfConfig":"18"},{"size":642,"mtime":1625671873775,"results":"21","hashOfConfig":"18"},{"size":2390,"mtime":1625691615663,"results":"22","hashOfConfig":"18"},{"size":2867,"mtime":1625683602698,"results":"23","hashOfConfig":"18"},{"size":2339,"mtime":1625684293282,"results":"24","hashOfConfig":"18"},{"size":2571,"mtime":1625682844289,"results":"25","hashOfConfig":"18"},{"size":8312,"mtime":1625671873777,"results":"26","hashOfConfig":"18"},{"size":2333,"mtime":1625691506391,"results":"27","hashOfConfig":"18"},{"size":1343,"mtime":1625691038906,"results":"28","hashOfConfig":"18"},{"size":1785,"mtime":1625674276566,"results":"29","hashOfConfig":"18"},{"size":2611,"mtime":1625671873776,"results":"30","hashOfConfig":"18"},{"size":1446,"mtime":1625671873774,"results":"31","hashOfConfig":"18"},{"size":277,"mtime":1625673979155,"results":"32","hashOfConfig":"18"},{"size":1540,"mtime":1625691647646,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1fbxz9v",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessicaliu/costgo/src/index.js",[],["70","71"],"/Users/jessicaliu/costgo/src/reportWebVitals.js",[],"/Users/jessicaliu/costgo/src/App.js",[],"/Users/jessicaliu/costgo/src/components/Header.jsx",[],"/Users/jessicaliu/costgo/src/components/Path.jsx",[],"/Users/jessicaliu/costgo/src/components/sample.jsx",["72","73"],"import React, { Component } from 'react';\n\nimport map from '../data/map.json'\n\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n  background-color: #364C83;\n  border-radius: 20px;\n  margin-left: 7%;\n  margin-right: 7%;\n  height: 60vh;\n  display: flexbox;\n  justify-content: center; \n  align-items: center;\n  \n`;\n\n\nconsole.log(map[\"Chips\"]);\n\nclass Graph extends Component {\n\ncomponentDidMount(){\n    var c = document.getElementById(\"canvas\");\n    var ctx = c.getContext(\"2d\");\n\n\n    var total_aisle = 12;\n    var position = 0;\n\n    var aisleWidth = 100;\n    var shelfWidth = 40;\n    var shelfLength = 180;\n\n    function drawAisle(aisleWidth, shelfWidth, shelfLength ){\n        ctx.fillStyle = 'brown';\n        for(let i = 0; i < total_aisle; i++){\n            ctx.beginPath();\n            ctx.fillRect(position, 30, shelfWidth, shelfLength);\n            position += shelfWidth+ aisleWidth;\n        }\n        \n    }\n\n    drawAisle(aisleWidth,shelfWidth,shelfLength);\n\n\n    var visited_array = {};\n\n    var lineHeight = 15;\n    ctx.fillStyle = 'white';\n    for (var key in map) {\n        \n        if (map.hasOwnProperty(key)) {\n\n            visited_array[key] = false;\n\n            let id_str = key;\n            let x = map[key].x;\n            let y = map[key].y;\n\n\n            ctx.save();\n            ctx.translate(x, y);\n\n            ctx.rotate(90 * Math.PI / 180);\n\n            ctx.textAlign = 'center';\n            ctx.font = \"8px Arial\";\n            \n            if(map[key].side == \"r\"){\n                ctx.fillText(id_str.substring(0, 6), 0, (lineHeight / 2)-8);\n            }\n            else{\n                ctx.fillText(id_str.substring(0, 6), 0, (lineHeight / 2)+0);\n            }\n\n            ctx.restore();\n            \n\n            //ctx.font = \"8px Arial\";\n            //ctx.fillText(id_str.substring(0, 5), x, y);\n        }\n    }\n\n\n    function draw_path(array){\n\n        for(let i = 0; i < array.length; i++){\n            \n            if((i+1)!= array.length){\n                let curr_node = map[array[i]];\n                let next_node = map[array[i+1]]; \n    \n                ctx.strokeStyle = '#88F37F';\n                ctx.lineWidth = 3;\n                \n                // draw a red line\n\n                ctx.font = \"15px Arial\";\n                ctx.fillText(i+1, curr_node.x, curr_node.y);\n\n                ctx.beginPath();\n                ctx.moveTo(curr_node.x, curr_node.y);\n                ctx.lineTo(next_node.x, next_node.y);\n                ctx.stroke();\n    \n            }\n    \n    \n        }\n    } \n\n    //document.getElementById(\"items\").innerHTML= this.props.path;\n    draw_path(this.props.path);    \n\n\n}\n  render() {\n    return (\n        <Container>\n            <canvas  id=\"canvas\" width=\"1600\" height=\"400\"></canvas>\n        </Container>\n    );\n  }\n}\n\n\nconsole.log(\"Heloooo!!!!\");\n\n\n\nexport default Graph;","/Users/jessicaliu/costgo/src/components/Content.jsx",[],"/Users/jessicaliu/costgo/src/components/Inventory.jsx",["74"],"import React, { Component } from 'react';\nimport Item from './Item.jsx';\nimport styled from 'styled-components';\nimport data from '../data/map.json';\nimport images from './Images.jsx';\n\nconst Container = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Nunito&display=swap');\n  \n  background-color: #364C83;\n  border-radius: 20px;\n  margin-left: 7%;\n  margin-right: 7%;\n  margin-top: 30px;\n  height: 60vh;\n  overflow: scroll;\n`;\n\nconst Title = styled.h1`\n  color: white;\n  padding-top: 2%;\n  padding-left: 15%;\n  font-family: 'Nunito', sans-serif;\n  font-weight: 600;\n`;\n\nconst Section = styled.h3`\n  color: white;\n  padding-top: 2%;\n  padding-left: 15%;\n  font-family: 'Nunito', sans-serif;\n`;\n\nclass Inventory extends Component {\n  \n  render() {\n    var arr = [];\n    Object.keys(data).forEach(function(key) {\n      //console.log(key + ' - ' + data[key].connectorType);\n      //console.log(key + ' - ' + data[key].rating);\n      if (data[key].connectorType == null) {\n        arr.push(data[key]);\n      }\n    });\n    var current = \"\";\n    let list = [];\n    let categoriesDict={};\n    for(const item of arr){\n      if(categoriesDict[item.category] === undefined){\n        categoriesDict[item.category] = [<>\n          <Section>{item.category}</Section>\n          <Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>\n          </>];\n      }\n      else{\n          categoriesDict[item.category].push(<Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>);\n      }  \n    }\n    for (const categoryList of Object.values(categoriesDict)){\n      list=list.concat(categoryList);\n    }\n    /*\n    arr.map(item => {\n      if (item.category == current) {\n        list.push(<Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>)\n      } else {\n        current = item.category;\n        list.push(<>\n              <Section>{item.category}</Section>\n              <Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>\n              </>)\n      }\n    });\n    */\n    return (\n      <Container>\n        <Title>Inventory</Title>\n        {list}\n      </Container>\n    );\n  }\n}\n\nexport default Inventory;","/Users/jessicaliu/costgo/src/components/shortestPathFinder.js",["75","76","77","78"],"import map from '../data/map.json';\n\nclass QElement{\n    constructor(element,priority){\n        this.element=element;\n        this.priority=priority;\n    }\n}\n\nclass PriorityQueue{\n    constructor(){\n        this.heap=[null];\n    }\n    isEmpty(){\n        return this.heap.length == 1;\n    }\n    enqueue(node,priority){\n  // creating object from queue element\n        var qElement = new QElement(node, priority);\n        this.heap.push(qElement);\n    \n    /* Finding the correct position for the new node */\n\n        if (this.heap.length > 1) {\n            let current = this.heap.length - 1\n        \n        /* Traversing up the parent node until the current node (current) is greater than the parent (current/2)*/\n            while (current > 1 && this.heap[Math.floor(current/2)].priority > this.heap[current].priority) {\n        \n            /* Swapping the two nodes by using the ES6 destructuring syntax*/\n                [this.heap[Math.floor(current/2)], this.heap[current]] = [this.heap[current], this.heap[Math.floor(current/2)]]\n                current = Math.floor(current/2)\n            }\n        }\n    }\n\n    dequeue(){\n        let smallest = this.heap[1]\n    \n        /* When there are more than two elements in the array, we put the right most element at the first position\n            and start comparing nodes with the child nodes\n        */\n        if (this.heap.length > 2) {\n            this.heap[1] = this.heap[this.heap.length-1]\n            this.heap.splice(this.heap.length - 1)\n    \n            if (this.heap.length === 3) {\n                if (this.heap[1].priority > this.heap[2].priority) {\n                    [this.heap[1], this.heap[2]] = [this.heap[2], this.heap[1]]\n                }\n                return smallest.element;\n            }\n    \n            let current = 1\n            let leftChildIndex = current * 2\n            let rightChildIndex = current * 2 + 1\n    \n            while (this.heap[leftChildIndex] &&\n                    this.heap[rightChildIndex] &&\n                    (this.heap[current].priority > this.heap[leftChildIndex].priority ||\n                        this.heap[current].priority > this.heap[rightChildIndex].priority)) {\n                if (this.heap[leftChildIndex].priority < this.heap[rightChildIndex].priority) {\n                    [this.heap[current], this.heap[leftChildIndex]] = [this.heap[leftChildIndex], this.heap[current]]\n                    current = leftChildIndex\n                } else {\n                    [this.heap[current], this.heap[rightChildIndex]] = [this.heap[rightChildIndex], this.heap[current]]\n                    current = rightChildIndex\n                }\n    \n                leftChildIndex = current * 2\n                rightChildIndex = current * 2 + 1\n            }\n        }\n        \n        /* If there are only two elements in the array, we directly splice out the first element */\n        \n        else if (this.heap.length === 2) {\n            this.heap.splice(1, 1)\n        } else {\n            return null\n        }\n    \n        return smallest.element;\n  \n    }\n}\n\nclass ShortestPathFinder{\n    constructor(){\n        this.map=map;\n    }\n\n    //@param items\n    //array of strings of names of items of shopping cart\n    getShortestPath(items){\n        //Start path on start node\n        let curItem = this.map.start; //curItem is a node\n        let path = [\"start\"]; //array of strings of names of items\n\n        while(items.length > 0) {\n            let dists = this.dijkstras(curItem);\n            let nextItem = this.searchForShortestItem(dists,items);\n            let pathToNextItem = [nextItem];\n            let curPathNode = nextItem;\n            while(dists[curPathNode].parent !== curItem.name) {\n                curPathNode = dists[curPathNode].parent;\n                pathToNextItem.unshift(curPathNode);       \n            }   \n\n            Array.prototype.push.apply(path, pathToNextItem)\n\n            curItem = this.map[nextItem];\n\n            //remove current item from items\n            const index = items.indexOf(curItem.name);\n            if (index > -1) {\n                items.splice(index, 1);\n            }\n        }\n        path.push(\"bottomAisle\"+this.map[path[path.length - 1]].aisle);\n        path.push(\"exit\")\n        return path;\n    }\n    dijkstras(node){\n        let dists={};\n        dists[node.name]={dist:0,parent:null};\n        let pq= new PriorityQueue();\n        pq.enqueue(node.name,0);\n        while (!pq.isEmpty()){\n            let dq=pq.dequeue();\n            let curr=this.map[dq];\n            for(const n of Object.keys(curr.neighbors)){\n                if(dists[n] === undefined || dists[n].dist > dists[curr.name].dist + curr.neighbors[n])\n                {\n                    dists[n] = {dist: dists[curr.name].dist + curr.neighbors[n],parent:curr.name};\n                    pq.enqueue(n,dists[n].dist);\n                }\n            }\n        }\n        return dists;\n        //in a loop, continually visit the closest unvisited node to root, relaxing all its neighbors.\n\n\n    }\n    searchForShortestItem(dists,items){\n        var item; \n        var minDistance = Number.MAX_VALUE; \n\n        for(let i = 0; i < items.length; i++){\n            if(dists[items[i]].dist < minDistance){\n                item = items[i]; \n                minDistance = dists[items[i]].dist;\n            }\n        }\n        \n        return item;\n    }\n}\n\nfunction equals(list1,list2){\n    if(list1.length != list2.length){\n        return false;\n    }\n    for(let i=0;i<list1.length;i++){\n        if(list1[i] != list2[i]){\n            return false;\n        }\n    }\n    return true;\n}\nfunction testShortestPathFinder(){\n    let tests = [\n        {items:[\"Juices\",\"Bread\"],shortestPath:[\n            'start',\n            'topAisle9',\n            'Bread',\n            'bottomAisle9',\n            'bottomAisle10',\n            'Juices',\n            'bottomAisle10',\n            'exit'\n          ]},\n        {items:[\"Chips\",\"Nuts\",\"Candy\",\"CannedFish\"],shortestPath:[\n        'start','topAisle4',\n        'Candy',        'bottomAisle4',\n        'bottomAisle5', 'Chips',\n        'Nuts',         'topAisle5',\n        'topAisle6',    'topAisle7',\n        'CannedFish',   'bottomAisle7',\n        'exit']},\n        {items:[\"ProteinPowder\",\"Tea\",\"Coffee\",\"Oats\",\"DriedFruit\"],shortestPath:[  \n        'start',         'topAisle3',\n        'ProteinPowder', 'bottomAisle3',\n        'bottomAisle4',  'bottomAisle5',\n        'bottomAisle6',  'DriedFruit',\n        'topAisle6',     'topAisle7',\n        'topAisle8',     'topAisle9',\n        'topAisle10',    'Oats',\n        'topAisle10',    'topAisle11',\n        'Tea',           'Coffee',\n        'bottomAisle11', 'exit']},\n        {items:[\"Olives\",\"Beans\",\"Oil\",\"Rice\",\"Tea\",\"NutBars\"],shortestPath:[\n            'start',         'topAisle3',\n            'NutBars',       'bottomAisle3',\n            'bottomAisle4',  'bottomAisle5',\n            'bottomAisle6',  'Rice',\n            'bottomAisle6',  'bottomAisle7',\n            'Olives',        'Beans',\n            'topAisle7',     'topAisle8',\n            'Oil',           'topAisle8',\n            'topAisle9',     'topAisle10',\n            'topAisle11',    'Tea',\n            'bottomAisle11', 'exit']},\n        {items:[\"BabyProducts\",\"ChildSupplements\",\"Condiments\",\"Coffee\",\"Sugar\",\"PeanutButter\",\"Cereal\"],shortestPath:[\n            'start',         'topAisle2',\n            'BabyProducts',  'ChildSupplements',\n            'bottomAisle2',  'bottomAisle3',\n            'bottomAisle4',  'bottomAisle5',\n            'bottomAisle6',  'bottomAisle7',\n            'Condiments',    'bottomAisle7',\n            'bottomAisle8',  'Sugar',\n            'bottomAisle8',  'bottomAisle9',\n            'Cereal',        'bottomAisle9',\n            'bottomAisle10', 'PeanutButter',\n            'bottomAisle10', 'bottomAisle11',\n            'Coffee',        'bottomAisle11',\n            'exit']}\n    ]\n    let spf = new ShortestPathFinder();\n    for (const test of tests){\n        let path=spf.getShortestPath(test.items);\n        console.log(\"found the path:\",path);\n        if(!equals(path,test.shortestPath)){\n            console.log(\"failed this test!:\",test);\n        } \n        else{\n            console.log(\"test passed\");\n        }\n    }\n}\n//testShortestPathFinder();\nexport default ShortestPathFinder;","/Users/jessicaliu/costgo/src/components/Direction.jsx",["79","80","81"],"/Users/jessicaliu/costgo/src/components/Button.jsx",[],"/Users/jessicaliu/costgo/src/components/Item.jsx",[],"/Users/jessicaliu/costgo/src/components/Images.jsx",[],"/Users/jessicaliu/costgo/src/components/Checkbox.jsx",[],"/Users/jessicaliu/costgo/src/components/Emoji.jsx",[],"/Users/jessicaliu/costgo/src/components/Error.jsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":73,"column":30,"nodeType":"88","messageId":"89","endLine":73,"endColumn":32},{"ruleId":"86","severity":1,"message":"90","line":93,"column":21,"nodeType":"88","messageId":"89","endLine":93,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":45,"column":9,"nodeType":"93","messageId":"94","endLine":45,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":15,"column":33,"nodeType":"88","messageId":"89","endLine":15,"endColumn":35},{"ruleId":"86","severity":1,"message":"90","line":161,"column":21,"nodeType":"88","messageId":"89","endLine":161,"endColumn":23},{"ruleId":"86","severity":1,"message":"90","line":165,"column":21,"nodeType":"88","messageId":"89","endLine":165,"endColumn":23},{"ruleId":"91","severity":1,"message":"95","line":171,"column":10,"nodeType":"93","messageId":"94","endLine":171,"endColumn":32},{"ruleId":"91","severity":1,"message":"96","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":82,"column":22,"nodeType":"99","messageId":"100","endLine":82,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":83,"column":17,"nodeType":"88","messageId":"89","endLine":83,"endColumn":19},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'current' is assigned a value but never used.","Identifier","unusedVar","'testShortestPathFinder' is defined but never used.","'ThemeConsumer' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\joesande\\Desktop\\costgo\\src\\index.js":"1","C:\\Users\\joesande\\Desktop\\costgo\\src\\App.js":"2","C:\\Users\\joesande\\Desktop\\costgo\\src\\reportWebVitals.js":"3","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Header.jsx":"4","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Content.jsx":"5","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\sample.jsx":"6","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Path.jsx":"7","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\shortestPathFinder.js":"8","C:\\Users\\joesande\\Desktop\\costgo\\src\\test.js":"9","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Inventory.jsx":"10","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Button.jsx":"11","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Images.jsx":"12","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Item.jsx":"13","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Checkbox.jsx":"14","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Emoji.jsx":"15","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Direction.jsx":"16"},{"size":517,"mtime":1624979168066,"results":"17","hashOfConfig":"18"},{"size":629,"mtime":1625589000005,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1624979168067,"results":"20","hashOfConfig":"18"},{"size":675,"mtime":1625147192756,"results":"21","hashOfConfig":"18"},{"size":2448,"mtime":1625682991307,"results":"22","hashOfConfig":"18"},{"size":2999,"mtime":1625686782310,"results":"23","hashOfConfig":"18"},{"size":2285,"mtime":1625683899501,"results":"24","hashOfConfig":"18"},{"size":9398,"mtime":1625685824131,"results":"25","hashOfConfig":"18"},{"size":1481,"mtime":1625593552003,"results":"26","hashOfConfig":"18"},{"size":2654,"mtime":1625683899501,"results":"27","hashOfConfig":"18"},{"size":1392,"mtime":1625686072559,"results":"28","hashOfConfig":"18"},{"size":2696,"mtime":1625670351180,"results":"29","hashOfConfig":"18"},{"size":1826,"mtime":1625686200302,"results":"30","hashOfConfig":"18"},{"size":1511,"mtime":1625147192756,"results":"31","hashOfConfig":"18"},{"size":288,"mtime":1625679621108,"results":"32","hashOfConfig":"18"},{"size":543,"mtime":1625685257491,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1rmdeky",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"C:\\Users\\joesande\\Desktop\\costgo\\src\\index.js",[],["72","73"],"C:\\Users\\joesande\\Desktop\\costgo\\src\\App.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\reportWebVitals.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Header.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Content.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\sample.jsx",["74","75"],"import React, { Component } from 'react';\r\n\r\nimport map from '../data/map.json'\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n  background-color: #364C83;\r\n  border-radius: 20px;\r\n  margin-left: 7%;\r\n  margin-right: 7%;\r\n  height: 60vh;\r\n  display: flexbox;\r\n  justify-content: center; \r\n  align-items: center;\r\n  \r\n`;\r\n\r\n\r\nconsole.log(map[\"Chips\"]);\r\n\r\nclass Graph extends Component {\r\n\r\ncomponentDidMount(){\r\n    var c = document.getElementById(\"canvas\");\r\n    var ctx = c.getContext(\"2d\");\r\n\r\n\r\n    var total_aisle = 12;\r\n    var position = 0;\r\n\r\n    var aisleWidth = 100;\r\n    var shelfWidth = 40;\r\n    var shelfLength = 180;\r\n\r\n    function drawAisle(aisleWidth, shelfWidth, shelfLength ){\r\n        ctx.fillStyle = 'brown';\r\n        for(let i = 0; i < total_aisle; i++){\r\n            ctx.beginPath();\r\n            ctx.fillRect(position, 30, shelfWidth, shelfLength);\r\n            position += shelfWidth+ aisleWidth;\r\n        }\r\n        \r\n    }\r\n\r\n    drawAisle(aisleWidth,shelfWidth,shelfLength);\r\n\r\n\r\n    var visited_array = {};\r\n\r\n    var lineHeight = 15;\r\n    ctx.fillStyle = 'white';\r\n    for (var key in map) {\r\n        \r\n        if (map.hasOwnProperty(key)) {\r\n\r\n            visited_array[key] = false;\r\n\r\n            let id_str = key;\r\n            let x = map[key].x;\r\n            let y = map[key].y;\r\n\r\n            ctx.save();\r\n            ctx.translate(x, y);\r\n\r\n            ctx.rotate(90 * Math.PI / 180);\r\n\r\n            ctx.textAlign = 'center';\r\n            ctx.font = \"8px Arial\";\r\n            \r\n            if(map[key].side == \"r\"){\r\n                ctx.fillText(id_str.substring(0, 6), 0, (lineHeight / 2)-8);\r\n            }\r\n            else{\r\n                ctx.fillText(id_str.substring(0, 6), 0, (lineHeight / 2)+0);\r\n            }\r\n\r\n            ctx.restore();\r\n            \r\n\r\n            //ctx.font = \"8px Arial\";\r\n            //ctx.fillText(id_str.substring(0, 5), x, y);\r\n        }\r\n    }\r\n\r\n\r\n    function draw_path(array){\r\n\r\n        for(let i = 0; i < array.length; i++){\r\n            \r\n            if((i+1)!= array.length){\r\n                let curr_node = map[array[i]];\r\n                let next_node = map[array[i+1]]; \r\n    \r\n                ctx.strokeStyle = '#88F37F';\r\n                ctx.lineWidth = 3;\r\n                \r\n                // draw a red line\r\n\r\n                ctx.font = \"15px Arial\";\r\n                ctx.fillText(i+1, curr_node.x, curr_node.y);\r\n\r\n                ctx.beginPath();\r\n                ctx.moveTo(curr_node.x, curr_node.y);\r\n                ctx.lineTo(next_node.x, next_node.y);\r\n                ctx.stroke();\r\n    \r\n            }\r\n    \r\n    \r\n        }\r\n    } \r\n\r\n    //document.getElementById(\"items\").innerHTML= this.props.path;\r\n    draw_path(this.props.path);    \r\n\r\n\r\n}\r\n  render() {\r\n    return (\r\n        <Container>\r\n            <canvas  id=\"canvas\" width=\"1600\" height=\"500\"></canvas>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconsole.log(\"Heloooo!!!!\");\r\n\r\n\r\n\r\nexport default Graph;","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Path.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\shortestPathFinder.js",["76","77","78","79"],"import map from '../data/map.json';\r\nclass QElement{\r\n    constructor(element,priority){\r\n        this.element=element;\r\n        this.priority=priority;\r\n    }\r\n}\r\n\r\nclass PriorityQueue{\r\n    constructor(){\r\n        this.heap=[null];\r\n    }\r\n    isEmpty(){\r\n        return this.heap.length == 1;\r\n    }\r\n    enqueue(node,priority){\r\n  // creating object from queue element\r\n        var qElement = new QElement(node, priority);\r\n        this.heap.push(qElement);\r\n    \r\n    /* Finding the correct position for the new node */\r\n\r\n        if (this.heap.length > 1) {\r\n            let current = this.heap.length - 1\r\n        \r\n        /* Traversing up the parent node until the current node (current) is greater than the parent (current/2)*/\r\n            while (current > 1 && this.heap[Math.floor(current/2)].priority > this.heap[current].priority) {\r\n        \r\n            /* Swapping the two nodes by using the ES6 destructuring syntax*/\r\n                [this.heap[Math.floor(current/2)], this.heap[current]] = [this.heap[current], this.heap[Math.floor(current/2)]]\r\n                current = Math.floor(current/2)\r\n            }\r\n        }\r\n    }\r\n\r\n    dequeue(){\r\n        let smallest = this.heap[1]\r\n    \r\n        /* When there are more than two elements in the array, we put the right most element at the first position\r\n            and start comparing nodes with the child nodes\r\n        */\r\n        if (this.heap.length > 2) {\r\n            this.heap[1] = this.heap[this.heap.length-1]\r\n            this.heap.splice(this.heap.length - 1)\r\n    \r\n            if (this.heap.length === 3) {\r\n                if (this.heap[1].priority > this.heap[2].priority) {\r\n                    [this.heap[1], this.heap[2]] = [this.heap[2], this.heap[1]]\r\n                }\r\n                return smallest.element;\r\n            }\r\n    \r\n            let current = 1\r\n            let leftChildIndex = current * 2\r\n            let rightChildIndex = current * 2 + 1\r\n    \r\n            while (this.heap[leftChildIndex] &&\r\n                    this.heap[rightChildIndex] &&\r\n                    (this.heap[current].priority > this.heap[leftChildIndex].priority ||\r\n                        this.heap[current].priority > this.heap[rightChildIndex].priority)) {\r\n                if (this.heap[leftChildIndex].priority < this.heap[rightChildIndex].priority) {\r\n                    [this.heap[current], this.heap[leftChildIndex]] = [this.heap[leftChildIndex], this.heap[current]]\r\n                    current = leftChildIndex\r\n                } else {\r\n                    [this.heap[current], this.heap[rightChildIndex]] = [this.heap[rightChildIndex], this.heap[current]]\r\n                    current = rightChildIndex\r\n                }\r\n    \r\n                leftChildIndex = current * 2\r\n                rightChildIndex = current * 2 + 1\r\n            }\r\n        }\r\n        \r\n        /* If there are only two elements in the array, we directly splice out the first element */\r\n        \r\n        else if (this.heap.length === 2) {\r\n            this.heap.splice(1, 1)\r\n        } else {\r\n            return null\r\n        }\r\n    \r\n        return smallest.element;\r\n  \r\n    }\r\n}\r\n\r\nclass ShortestPathFinder{\r\n    constructor(){\r\n        this.map=map;\r\n    }\r\n\r\n    //@param items\r\n    //array of strings of names of items of shopping cart\r\n    getShortestPath(items){\r\n        //Start path on start node\r\n        let curItem = this.map.start; //curItem is a node\r\n        let path = [\"start\"]; //array of strings of names of items\r\n\r\n        while(items.length > 0) {\r\n            let dists = this.dijkstras(curItem);\r\n            let nextItem = this.searchForShortestItem(dists,items);\r\n            let pathToNextItem = [nextItem];\r\n            let curPathNode = nextItem;\r\n            while(dists[curPathNode].parent !== curItem.name) {\r\n                curPathNode = dists[curPathNode].parent;\r\n                pathToNextItem.unshift(curPathNode);       \r\n            }   \r\n\r\n            //merge the whole path with the path to next item\r\n            Array.prototype.push.apply(path, pathToNextItem);\r\n\r\n            curItem = this.map[nextItem];\r\n\r\n            //remove current item from items\r\n            const index = items.indexOf(curItem.name);\r\n            if (index > -1) {\r\n                items.splice(index, 1);\r\n            }\r\n        }\r\n        let finalStopName=\"bottomAisle\"+this.map[path[path.length - 1]].aisle;\r\n        path.push(finalStopName);\r\n        let dists=this.dijkstras(this.map[finalStopName]);\r\n        let path2exit=[\"exit\"];\r\n        let parentName = dists[\"exit\"].parent;\r\n        console.log(\"above the loop\");\r\n        while (parentName !== finalStopName){\r\n            path2exit.unshift(parentName);\r\n            parentName=dists[parentName].parent;\r\n        }\r\n        path=path.concat(path2exit);\r\n        return path;\r\n    }\r\n    dijkstras(node){\r\n        let dists={};\r\n        dists[node.name]={dist:0,parent:null};\r\n        let pq= new PriorityQueue();\r\n        pq.enqueue(node.name,0);\r\n        while (!pq.isEmpty()){\r\n            let dq=pq.dequeue();\r\n            let curr=this.map[dq];\r\n            for(const n of Object.keys(curr.neighbors)){\r\n                if(dists[n] === undefined || dists[n].dist > dists[curr.name].dist + curr.neighbors[n])\r\n                {\r\n                    dists[n] = {dist: dists[curr.name].dist + curr.neighbors[n],parent:curr.name};\r\n                    pq.enqueue(n,dists[n].dist);\r\n                }\r\n            }\r\n        }\r\n        return dists;\r\n        //in a loop, continually visit the closest unvisited node to root, relaxing all its neighbors.\r\n    }\r\n\r\n    searchForShortestItem(dists,items){\r\n        var item; \r\n        var minDistance = Number.MAX_VALUE; \r\n\r\n        for(let i = 0; i < items.length; i++){\r\n            if(dists[items[i]].dist < minDistance){\r\n                item = items[i]; \r\n                minDistance = dists[items[i]].dist;\r\n            }\r\n        }\r\n        \r\n        return item;\r\n    }\r\n}\r\n\r\nfunction equals(list1,list2){\r\n    if(list1.length != list2.length){\r\n        return false;\r\n    }\r\n    for(let i=0;i<list1.length;i++){\r\n        if(list1[i] != list2[i]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction testShortestPathFinder(){\r\n    let tests = [\r\n        {items:[\"Juices\",\"Bread\"],shortestPath:[\r\n            'start',\r\n            'topAisle9',\r\n            'Bread',\r\n            'bottomAisle9',\r\n            'bottomAisle10',\r\n            'Juices',\r\n            'bottomAisle10',\r\n            'Leggings',\r\n            'exit'\r\n          ]},\r\n        {items:[\"Chips\",\"Nuts\",\"Candy\",\"Canned Fish\"],shortestPath:[\r\n        'start','topAisle4',\r\n        'Candy',        'bottomAisle4',\r\n        'bottomAisle5', 'Chips',\r\n        'Nuts',         'topAisle5',\r\n        'topAisle6',    'topAisle7',\r\n        'Canned Fish',   'bottomAisle7',\r\n        'Leggings','exit']},\r\n        {items:[\"Protein Powder\",\"Tea\",\"Coffee\",\"Oats\",\"Dried Fruit\"],shortestPath:[  \r\n        'start',         'topAisle3',\r\n        'Protein Powder', 'bottomAisle3',\r\n        'bottomAisle4',  'bottomAisle5',\r\n        'bottomAisle6',  'Dried Fruit',\r\n        'topAisle6',     'topAisle7',\r\n        'topAisle8',     'topAisle9',\r\n        'topAisle10',    'Oats',\r\n        'topAisle10',    'topAisle11',\r\n        'Tea',           'Coffee',\r\n        'bottomAisle11', 'Leggings',\r\n        'exit']},\r\n        {items:[\"Olives\",\"Beans\",\"Oil\",\"Rice\",\"Tea\",\"Nut Bars\"],shortestPath:[\r\n            'start',         'topAisle3',\r\n            'Nut Bars',       'bottomAisle3',\r\n            'bottomAisle4',  'bottomAisle5',\r\n            'bottomAisle6',  'Rice',\r\n            'bottomAisle6',  'bottomAisle7',\r\n            'Olives',        'Beans',\r\n            'topAisle7',     'topAisle8',\r\n            'Oil',           'topAisle8',\r\n            'topAisle9',     'topAisle10',\r\n            'topAisle11',    'Tea',\r\n            'bottomAisle11', 'Leggings',\r\n            'exit']},\r\n        {items:[\"Baby Products\",\"Child Supplements\",\"Condiments\",\"Coffee\",\"Sugar\",\"Peanut Butter\",\"Cereal\"],shortestPath:[\r\n            'start',         'topAisle2',\r\n            'Baby Products',  'Child Supplements',\r\n            'bottomAisle2',  'bottomAisle3',\r\n            'bottomAisle4',  'bottomAisle5',\r\n            'bottomAisle6',  'bottomAisle7',\r\n            'Condiments',    'bottomAisle7',\r\n            'bottomAisle8',  'Sugar',\r\n            'bottomAisle8',  'bottomAisle9',\r\n            'Cereal',        'bottomAisle9',\r\n            'bottomAisle10', 'Peanut Butter',\r\n            'bottomAisle10', 'bottomAisle11',\r\n            'Coffee',        'bottomAisle11',\r\n            'Leggings','exit']},\r\n        {items:[\"Baby Products\",\"Vitamins\"],shortestPath:[ \r\n            'start',\r\n            'topAisle1',\r\n            'Vitamins',\r\n            'topAisle1',\r\n            'topAisle2',\r\n            'Baby Products',\r\n            'bottomAisle2',\r\n            'Jackets',\r\n            'exit']}\r\n    ]\r\n    let spf = new ShortestPathFinder();\r\n    for (const test of tests){\r\n        let path=spf.getShortestPath(test.items);\r\n        console.log(\"found the path:\",path);\r\n        if(!equals(path,test.shortestPath)){\r\n            console.log(\"failed this test!:\",test);\r\n        } \r\n        else{\r\n            console.log(\"test passed\");\r\n        }\r\n    }\r\n}\r\n//testShortestPathFinder();\r\nexport default ShortestPathFinder;","C:\\Users\\joesande\\Desktop\\costgo\\src\\test.js",[],["80","81"],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Inventory.jsx",["82"],"import React, { Component } from 'react';\r\nimport Item from './Item.jsx';\r\nimport styled from 'styled-components';\r\nimport data from '../data/map.json';\r\nimport images from './Images.jsx';\r\n\r\nconst Container = styled.div`\r\n  @import url('https://fonts.googleapis.com/css2?family=Nunito&display=swap');\r\n  \r\n  background-color: #364C83;\r\n  border-radius: 20px;\r\n  margin-left: 7%;\r\n  margin-right: 7%;\r\n  margin-top: 30px;\r\n  height: 60vh;\r\n  overflow: scroll;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  padding-top: 2%;\r\n  padding-left: 15%;\r\n  font-family: 'Nunito', sans-serif;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Section = styled.h3`\r\n  color: white;\r\n  padding-top: 2%;\r\n  padding-left: 15%;\r\n  font-family: 'Nunito', sans-serif;\r\n`;\r\n\r\nclass Inventory extends Component {\r\n  \r\n  render() {\r\n    var arr = [];\r\n    Object.keys(data).forEach(function(key) {\r\n      //console.log(key + ' - ' + data[key].connectorType);\r\n      //console.log(key + ' - ' + data[key].rating);\r\n      if (data[key].connectorType == null) {\r\n        arr.push(data[key]);\r\n      }\r\n    });\r\n    var current = \"\";\r\n    let list = [];\r\n    let categoriesDict={};\r\n    for(const item of arr){\r\n      if(categoriesDict[item.category] === undefined){\r\n        categoriesDict[item.category] = [<>\r\n          <Section>{item.category}</Section>\r\n          <Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>\r\n          </>];\r\n      }\r\n      else{\r\n          categoriesDict[item.category].push(<Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>);\r\n      }  \r\n    }\r\n    for (const categoryList of Object.values(categoriesDict)){\r\n      list=list.concat(categoryList);\r\n    }\r\n    /*\r\n    arr.map(item => {\r\n      if (item.category == current) {\r\n        list.push(<Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>)\r\n      } else {\r\n        current = item.category;\r\n        list.push(<>\r\n              <Section>{item.category}</Section>\r\n              <Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>\r\n              </>)\r\n      }\r\n    });\r\n    */\r\n    return (\r\n      <Container>\r\n        <Title>Inventory</Title>\r\n        {list}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Button.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Images.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Item.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Checkbox.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Emoji.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Direction.jsx",["83","84"],"import React, { Component } from 'react';\r\nimport map from '../data/map.json'\r\nimport styled, { ThemeConsumer } from 'styled-components'; \r\n\r\n\r\n\r\n\r\nclass Direction extends Component {\r\n\r\n\r\n    render() {\r\n    var array= [];\r\n    for(const item of this.props.path){\r\n        if (map[item].connectorType == null) {\r\n            array.push(item);\r\n          }\r\n    }\r\n      return (\r\n        <div>\r\n            {array.map((item)=><h3>{map[item].name} {map[item].aisle}</h3>)}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Direction;",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":72,"column":30,"nodeType":"91","messageId":"92","endLine":72,"endColumn":32},{"ruleId":"89","severity":1,"message":"93","line":92,"column":21,"nodeType":"91","messageId":"92","endLine":92,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":14,"column":33,"nodeType":"91","messageId":"92","endLine":14,"endColumn":35},{"ruleId":"89","severity":1,"message":"93","line":169,"column":21,"nodeType":"91","messageId":"92","endLine":169,"endColumn":23},{"ruleId":"89","severity":1,"message":"93","line":173,"column":21,"nodeType":"91","messageId":"92","endLine":173,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":179,"column":10,"nodeType":"96","messageId":"97","endLine":179,"endColumn":32},{"ruleId":"85","replacedBy":"98"},{"ruleId":"87","replacedBy":"99"},{"ruleId":"94","severity":1,"message":"100","line":45,"column":9,"nodeType":"96","messageId":"97","endLine":45,"endColumn":16},{"ruleId":"94","severity":1,"message":"101","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"102","line":3,"column":18,"nodeType":"96","messageId":"97","endLine":3,"endColumn":31},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'testShortestPathFinder' is defined but never used.","Identifier","unusedVar",["103"],["104"],"'current' is assigned a value but never used.","'styled' is defined but never used.","'ThemeConsumer' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 74c366fa34512aa2e48e1b2bd139314011727001
