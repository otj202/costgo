[{"C:\\Users\\joesande\\Desktop\\costgo\\src\\index.js":"1","C:\\Users\\joesande\\Desktop\\costgo\\src\\reportWebVitals.js":"2","C:\\Users\\joesande\\Desktop\\costgo\\src\\App.js":"3","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Header.jsx":"4","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Content.jsx":"5","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\sample.jsx":"6","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Path.jsx":"7","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Error.jsx":"8","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Inventory.jsx":"9","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Button.jsx":"10","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\shortestPathFinder.js":"11","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Direction.jsx":"12","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Images.jsx":"13","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Item.jsx":"14","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Checkbox.jsx":"15","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Emoji.jsx":"16"},{"size":517,"mtime":1624979168066,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1624979168067,"results":"19","hashOfConfig":"18"},{"size":733,"mtime":1625750959024,"results":"20","hashOfConfig":"18"},{"size":675,"mtime":1625147192756,"results":"21","hashOfConfig":"18"},{"size":2448,"mtime":1625682991307,"results":"22","hashOfConfig":"18"},{"size":4810,"mtime":1625750959034,"results":"23","hashOfConfig":"18"},{"size":2496,"mtime":1625750959034,"results":"24","hashOfConfig":"18"},{"size":1614,"mtime":1625750959034,"results":"25","hashOfConfig":"18"},{"size":2654,"mtime":1625683899501,"results":"26","hashOfConfig":"18"},{"size":1368,"mtime":1625750959032,"results":"27","hashOfConfig":"18"},{"size":9520,"mtime":1625687402894,"results":"28","hashOfConfig":"18"},{"size":3218,"mtime":1625754347739,"results":"29","hashOfConfig":"18"},{"size":2696,"mtime":1625670351180,"results":"30","hashOfConfig":"18"},{"size":1826,"mtime":1625686200302,"results":"31","hashOfConfig":"18"},{"size":1511,"mtime":1625147192756,"results":"32","hashOfConfig":"18"},{"size":288,"mtime":1625679621108,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rmdeky",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joesande\\Desktop\\costgo\\src\\index.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\reportWebVitals.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\App.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Header.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Content.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\sample.jsx",["69","70"],"import React, { Component } from 'react';\r\n\r\nimport map from '../data/map.json'\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n  background-color: #364C83;\r\n  border-radius: 20px;\r\n  margin-left: 7%;\r\n  margin-right: 7%;\r\n  height: 60vh;\r\n  display: flexbox;\r\n  justify-content: center; \r\n  align-items: center;\r\n  \r\n`;\r\n\r\n\r\nconsole.log(map[\"Chips\"]);\r\n\r\nclass Graph extends Component {\r\n\r\ncomponentDidMount(){\r\n    var c = document.getElementById(\"canvas\");\r\n    var ctx = c.getContext(\"2d\");\r\n\r\n\r\n    var total_aisle = 12;\r\n    var position = 0;\r\n\r\n    var shelfWidth = 45;\r\n    var aisleWidth = 80;\r\n    var shelfLength = 350;\r\n\r\n    function drawAisle(aisleWidth, shelfWidth, shelfLength ){\r\n        ctx.fillStyle = 'brown';\r\n        for(let i = 0; i < total_aisle; i++){\r\n            ctx.beginPath();\r\n            ctx.fillRect(position, 60, shelfWidth, shelfLength);\r\n            position += shelfWidth+ aisleWidth;\r\n        }\r\n        \r\n    }\r\n\r\n    drawAisle(aisleWidth,shelfWidth,shelfLength);\r\n\r\n\r\n    var visited_array = {};\r\n\r\n    var lineHeight = 26;\r\n    ctx.fillStyle = 'white';\r\n    for (var key in map) {\r\n        \r\n        if (map.hasOwnProperty(key)) {\r\n\r\n            visited_array[key] = false;\r\n\r\n            let id_str = key;\r\n            let x = map[key].x;\r\n            let y = map[key].y;\r\n\r\n            if(map[key].connectorType == null){\r\n                ctx.save();\r\n                ctx.translate(x, y);\r\n    \r\n                ctx.rotate(90 * Math.PI / 180);\r\n    \r\n                ctx.textAlign = 'center';\r\n                ctx.font = \"15px Arial\";\r\n                \r\n                if(map[key].side == \"r\"){\r\n                    ctx.fillText(id_str, 0, (lineHeight / 2)-15, 800);\r\n                }\r\n                else{\r\n                    ctx.fillText(id_str, 0, (lineHeight / 2)+0, 800);\r\n                }\r\n    \r\n                ctx.restore();\r\n                \r\n            }\r\n            else{\r\n                ctx.font = \"15px Arial\";\r\n                ctx.textAlign = 'center';\r\n                ctx.fillText(map[key].aisle, x, y);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    function drawLocator(x, y, length, num){\r\n  \r\n\r\n        ctx.fillStyle = 'orange';\r\n      \r\n        ctx.beginPath();\r\n        ctx.arc(x, y-length, 12, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      \r\n        var height = length * (Math.sqrt(3)/2); \r\n      \r\n        var  X = x;\r\n        var Y = y;\r\n        ctx.moveTo(X, Y);\r\n        ctx.lineTo(X+10, Y-height);\r\n        ctx.lineTo(X-10, Y-height);\r\n        ctx.moveTo(X, Y);\r\n        ctx.fill();\r\n        ctx.closePath(); \r\n      \r\n        ctx.fillStyle = 'white';\r\n        ctx.textAlign = 'center';\r\n        ctx.font = \"18px Arial\";\r\n        ctx.fillText(num, x, (y-length)+5); \r\n      \r\n    } \r\n\r\n\r\n    function draw_path(array){\r\n\r\n        var count = 1;\r\n        for(let i = 0; i < array.length; i++){\r\n            \r\n            if((i+1)!= array.length){\r\n                let curr_node = map[array[i]];\r\n                let next_node = map[array[i+1]]; \r\n    \r\n                ctx.strokeStyle = '#88F37F';\r\n                ctx.lineWidth = 3;\r\n                \r\n\r\n\r\n\r\n                ctx.beginPath();\r\n                ctx.moveTo(curr_node.x, curr_node.y);\r\n                ctx.lineTo(next_node.x, next_node.y);\r\n                ctx.stroke(); \r\n\r\n                if(next_node.connectorType == null){\r\n                    drawLocator(next_node.x, next_node.y, 30, count);\r\n                    count+=1;\r\n                }\r\n                \r\n    \r\n            }\r\n    \r\n    \r\n        }\r\n    } \r\n\r\n    //document.getElementById(\"items\").innerHTML= this.props.path;\r\n    draw_path(this.props.path);    \r\n \r\n    function drawSingleRack(x , y){\r\n        ctx.lineWidth=1;\r\n        ctx.fillStyle = 'white';\r\n\r\n        var x_pos = x;\r\n        var y_pos = y;\r\n        var length = 10;\r\n        var width = 10;\r\n        for(let x = 0; x < 3; x++){\r\n            for(let i = 0; i <4; i++){\r\n                ctx.strokeRect(x_pos+(i*width), y_pos, width, length);  \r\n            }\r\n            y_pos = y_pos+length;\r\n        }\r\n    }\r\n\r\n\r\n    function drawRacks(column, row, x, y, num_row, num_col){\r\n        var x_init = x;    \r\n        for(let i = 0; i < num_row; i++){\r\n            for(let z = 0; z < num_col; z++){\r\n                drawSingleRack(x, y); \r\n                x = x+column;\r\n            }\r\n            x = x_init;\r\n            y = y+row;\r\n        }\r\n    } \r\n\r\n    //drawSingleRack(10, 295);\r\n    drawRacks(180, 85, 30, 450, 3, 2 );\r\n    drawRacks(180, 85, 30, 705, 1, 4 );\r\n\r\n    \r\n\r\n}\r\n  render() {\r\n    return (\r\n        <Container>\r\n            <canvas  id=\"canvas\" width=\"1550\" height=\"800\"></canvas>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconsole.log(\"Heloooo!!!!\");\r\n\r\n\r\n\r\nexport default Graph;","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Path.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Error.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Inventory.jsx",["71"],"import React, { Component } from 'react';\r\nimport Item from './Item.jsx';\r\nimport styled from 'styled-components';\r\nimport data from '../data/map.json';\r\nimport images from './Images.jsx';\r\n\r\nconst Container = styled.div`\r\n  @import url('https://fonts.googleapis.com/css2?family=Nunito&display=swap');\r\n  \r\n  background-color: #364C83;\r\n  border-radius: 20px;\r\n  margin-left: 7%;\r\n  margin-right: 7%;\r\n  margin-top: 30px;\r\n  height: 60vh;\r\n  overflow: scroll;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  padding-top: 2%;\r\n  padding-left: 15%;\r\n  font-family: 'Nunito', sans-serif;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Section = styled.h3`\r\n  color: white;\r\n  padding-top: 2%;\r\n  padding-left: 15%;\r\n  font-family: 'Nunito', sans-serif;\r\n`;\r\n\r\nclass Inventory extends Component {\r\n  \r\n  render() {\r\n    var arr = [];\r\n    Object.keys(data).forEach(function(key) {\r\n      //console.log(key + ' - ' + data[key].connectorType);\r\n      //console.log(key + ' - ' + data[key].rating);\r\n      if (data[key].connectorType == null) {\r\n        arr.push(data[key]);\r\n      }\r\n    });\r\n    var current = \"\";\r\n    let list = [];\r\n    let categoriesDict={};\r\n    for(const item of arr){\r\n      if(categoriesDict[item.category] === undefined){\r\n        categoriesDict[item.category] = [<>\r\n          <Section>{item.category}</Section>\r\n          <Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>\r\n          </>];\r\n      }\r\n      else{\r\n          categoriesDict[item.category].push(<Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>);\r\n      }  \r\n    }\r\n    for (const categoryList of Object.values(categoriesDict)){\r\n      list=list.concat(categoryList);\r\n    }\r\n    /*\r\n    arr.map(item => {\r\n      if (item.category == current) {\r\n        list.push(<Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>)\r\n      } else {\r\n        current = item.category;\r\n        list.push(<>\r\n              <Section>{item.category}</Section>\r\n              <Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>\r\n              </>)\r\n      }\r\n    });\r\n    */\r\n    return (\r\n      <Container>\r\n        <Title>Inventory</Title>\r\n        {list}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Button.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\shortestPathFinder.js",["72","73","74","75"],"import map from '../data/map.json';\r\n//var map=require(\"../data/map.json\");\r\nclass QElement{\r\n    constructor(element,priority){\r\n        this.element=element;\r\n        this.priority=priority;\r\n    }\r\n}\r\n\r\nclass PriorityQueue{\r\n    constructor(){\r\n        this.heap=[null];\r\n    }\r\n    isEmpty(){\r\n        return this.heap.length == 1;\r\n    }\r\n    enqueue(node,priority){\r\n  // creating object from queue element\r\n        var qElement = new QElement(node, priority);\r\n        this.heap.push(qElement);\r\n    \r\n    /* Finding the correct position for the new node */\r\n\r\n        if (this.heap.length > 1) {\r\n            let current = this.heap.length - 1\r\n        \r\n        /* Traversing up the parent node until the current node (current) is greater than the parent (current/2)*/\r\n            while (current > 1 && this.heap[Math.floor(current/2)].priority > this.heap[current].priority) {\r\n        \r\n            /* Swapping the two nodes by using the ES6 destructuring syntax*/\r\n                [this.heap[Math.floor(current/2)], this.heap[current]] = [this.heap[current], this.heap[Math.floor(current/2)]]\r\n                current = Math.floor(current/2)\r\n            }\r\n        }\r\n    }\r\n\r\n    dequeue(){\r\n        let smallest = this.heap[1]\r\n    \r\n        /* When there are more than two elements in the array, we put the right most element at the first position\r\n            and start comparing nodes with the child nodes\r\n        */\r\n        if (this.heap.length > 2) {\r\n            this.heap[1] = this.heap[this.heap.length-1]\r\n            this.heap.splice(this.heap.length - 1)\r\n    \r\n            if (this.heap.length === 3) {\r\n                if (this.heap[1].priority > this.heap[2].priority) {\r\n                    [this.heap[1], this.heap[2]] = [this.heap[2], this.heap[1]]\r\n                }\r\n                return smallest.element;\r\n            }\r\n    \r\n            let current = 1\r\n            let leftChildIndex = current * 2\r\n            let rightChildIndex = current * 2 + 1\r\n    \r\n            while (this.heap[leftChildIndex] &&\r\n                    this.heap[rightChildIndex] &&\r\n                    (this.heap[current].priority > this.heap[leftChildIndex].priority ||\r\n                        this.heap[current].priority > this.heap[rightChildIndex].priority)) {\r\n                if (this.heap[leftChildIndex].priority < this.heap[rightChildIndex].priority) {\r\n                    [this.heap[current], this.heap[leftChildIndex]] = [this.heap[leftChildIndex], this.heap[current]]\r\n                    current = leftChildIndex\r\n                } else {\r\n                    [this.heap[current], this.heap[rightChildIndex]] = [this.heap[rightChildIndex], this.heap[current]]\r\n                    current = rightChildIndex\r\n                }\r\n    \r\n                leftChildIndex = current * 2\r\n                rightChildIndex = current * 2 + 1\r\n            }\r\n        }\r\n        \r\n        /* If there are only two elements in the array, we directly splice out the first element */\r\n        \r\n        else if (this.heap.length === 2) {\r\n            this.heap.splice(1, 1)\r\n        } else {\r\n            return null\r\n        }\r\n    \r\n        return smallest.element;\r\n  \r\n    }\r\n}\r\n\r\nclass ShortestPathFinder{\r\n    constructor(){\r\n        this.map=map;\r\n    }\r\n\r\n    //@param items\r\n    //array of strings of names of items of shopping cart\r\n    getShortestPath(items){\r\n        //Start path on start node\r\n        let curItem = this.map.start; //curItem is a node\r\n        let path = [\"start\"]; //array of strings of names of items\r\n\r\n        while(items.length > 0) {\r\n            let dists = this.dijkstras(curItem);\r\n            let nextItem = this.searchForShortestItem(dists,items);\r\n            let pathToNextItem = [nextItem];\r\n            let curPathNode = nextItem;\r\n            while(dists[curPathNode].parent !== curItem.name) {\r\n                curPathNode = dists[curPathNode].parent;\r\n                pathToNextItem.unshift(curPathNode);       \r\n            }   \r\n\r\n            //merge the whole path with the path to next item\r\n            Array.prototype.push.apply(path, pathToNextItem);\r\n            curItem = this.map[nextItem];\r\n\r\n            //remove current item from items\r\n            const index = items.indexOf(curItem.name);\r\n            if (index > -1) {\r\n                items.splice(index, 1);\r\n            }\r\n        }\r\n        let lastStop=this.map[path[path.length - 1]];\r\n        let dists=this.dijkstras(lastStop);\r\n        let path2exit=[\"exit\"];\r\n        let parentName = dists[\"exit\"].parent;\r\n        while (parentName !== lastStop.name){\r\n            path2exit.unshift(parentName);\r\n            parentName=dists[parentName].parent;\r\n        }\r\n        path=path.concat(path2exit);\r\n        return path;\r\n    }\r\n    dijkstras(node){\r\n        let dists={};\r\n        dists[node.name]={dist:0,parent:null};\r\n        let pq= new PriorityQueue();\r\n        pq.enqueue(node.name,0);\r\n        while (!pq.isEmpty()){\r\n            let dq=pq.dequeue();\r\n            let curr=this.map[dq];\r\n            for(const n of Object.keys(curr.neighbors)){\r\n                if(dists[n] === undefined || dists[n].dist > dists[curr.name].dist + curr.neighbors[n])\r\n                {\r\n                    dists[n] = {dist: dists[curr.name].dist + curr.neighbors[n],parent:curr.name};\r\n                    pq.enqueue(n,dists[n].dist);\r\n                }\r\n            }\r\n        }\r\n        return dists;\r\n        //in a loop, continually visit the closest unvisited node to root, relaxing all its neighbors.\r\n    }\r\n\r\n    searchForShortestItem(dists,items){\r\n        var item; \r\n        var minDistance = Number.MAX_VALUE; \r\n\r\n        for(let i = 0; i < items.length; i++){\r\n            if(dists[items[i]].dist < minDistance){\r\n                item = items[i]; \r\n                minDistance = dists[items[i]].dist;\r\n            }\r\n        }\r\n        \r\n        return item;\r\n    }\r\n}\r\n\r\nfunction equals(list1,list2){\r\n    if(list1.length != list2.length){\r\n        return false;\r\n    }\r\n    for(let i=0;i<list1.length;i++){\r\n        if(list1[i] != list2[i]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction testShortestPathFinder(){\r\n    let tests = [\r\n        {items:[\"Juices\",\"Bread\"],shortestPath:[\r\n            'start',\r\n            'topAisle9',\r\n            'Bread',\r\n            'bottomAisle9',\r\n            'bottomAisle10',\r\n            'Juices',\r\n            'bottomAisle10',\r\n            'Leggings',\r\n            'exit'\r\n          ]},\r\n        {items:[\"Chips\",\"Nuts\",\"Candy\",\"Canned Fish\"],shortestPath:[\r\n        'start','topAisle4',\r\n        'Candy',        'bottomAisle4',\r\n        'bottomAisle5', 'Chips',\r\n        'Nuts',         'topAisle5',\r\n        'topAisle6',    'topAisle7',\r\n        'Canned Fish',   'bottomAisle7',\r\n        'Leggings','exit']},\r\n        {items:[\"Protein Powder\",\"Tea\",\"Coffee\",\"Oats\",\"Dried Fruit\"],shortestPath:[  \r\n        'start',         'topAisle3',\r\n        'Protein Powder', 'bottomAisle3',\r\n        'bottomAisle4',  'bottomAisle5',\r\n        'bottomAisle6',  'Dried Fruit',\r\n        'topAisle6',     'topAisle7',\r\n        'topAisle8',     'topAisle9',\r\n        'topAisle10',    'Oats',\r\n        'topAisle10',    'topAisle11',\r\n        'Tea',           'Coffee',\r\n        'bottomAisle11', 'Leggings',\r\n        'exit']},\r\n        {items:[\"Olives\",\"Beans\",\"Oil\",\"Rice\",\"Tea\",\"Nut Bars\"],shortestPath:[\r\n            'start',         'topAisle3',\r\n            'Nut Bars',       'bottomAisle3',\r\n            'bottomAisle4',  'bottomAisle5',\r\n            'bottomAisle6',  'Rice',\r\n            'bottomAisle6',  'bottomAisle7',\r\n            'Olives',        'Beans',\r\n            'topAisle7',     'topAisle8',\r\n            'Oil',           'topAisle8',\r\n            'topAisle9',     'topAisle10',\r\n            'topAisle11',    'Tea',\r\n            'bottomAisle11', 'Leggings',\r\n            'exit']},\r\n        {items:[\"Baby Products\",\"Child Supplements\",\"Condiments\",\"Coffee\",\"Sugar\",\"Peanut Butter\",\"Cereal\"],shortestPath:[\r\n            'start',         'topAisle2',\r\n            'Baby Products',  'Child Supplements',\r\n            'bottomAisle2',  'bottomAisle3',\r\n            'bottomAisle4',  'bottomAisle5',\r\n            'bottomAisle6',  'bottomAisle7',\r\n            'Condiments',    'bottomAisle7',\r\n            'bottomAisle8',  'Sugar',\r\n            'bottomAisle8',  'bottomAisle9',\r\n            'Cereal',        'bottomAisle9',\r\n            'bottomAisle10', 'Peanut Butter',\r\n            'bottomAisle10', 'bottomAisle11',\r\n            'Coffee',        'bottomAisle11',\r\n            'Leggings','exit']},\r\n        {items:[\"Baby Products\",\"Vitamins\"],shortestPath:[ \r\n            'start',\r\n            'topAisle1',\r\n            'Vitamins',\r\n            'topAisle1',\r\n            'topAisle2',\r\n            'Baby Products',\r\n            'bottomAisle2',\r\n            'Jackets',\r\n            'exit']},\r\n        {items:[\"Shirts\",\"Vitamins\",\"Dresses\"],shortestPath:[\r\n            'start',\r\n  'topAisle1',\r\n  'Vitamins',\r\n  'bottomAisle1',\r\n  'Shirts',\r\n  'Dresses',\r\n  'Jackets',\r\n  'exit']\r\n        }\r\n    ]\r\n    let spf = new ShortestPathFinder();\r\n    for (const test of tests){\r\n        let path=spf.getShortestPath(test.items);\r\n        console.log(\"found the path:\",path);\r\n        if(!equals(path,test.shortestPath)){\r\n            console.log(\"failed this test!:\",test);\r\n        } \r\n        else{\r\n            console.log(\"test passed\");\r\n        }\r\n    }\r\n}\r\n//testShortestPathFinder();\r\nexport default ShortestPathFinder;","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Direction.jsx",["76","77","78"],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Images.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Item.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Checkbox.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Emoji.jsx",[],{"ruleId":"79","severity":1,"message":"80","line":73,"column":34,"nodeType":"81","messageId":"82","endLine":73,"endColumn":36},{"ruleId":"79","severity":1,"message":"83","line":125,"column":21,"nodeType":"81","messageId":"82","endLine":125,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":45,"column":9,"nodeType":"86","messageId":"87","endLine":45,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":15,"column":33,"nodeType":"81","messageId":"82","endLine":15,"endColumn":35},{"ruleId":"79","severity":1,"message":"83","line":167,"column":21,"nodeType":"81","messageId":"82","endLine":167,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":171,"column":21,"nodeType":"81","messageId":"82","endLine":171,"endColumn":23},{"ruleId":"84","severity":1,"message":"88","line":177,"column":10,"nodeType":"86","messageId":"87","endLine":177,"endColumn":32},{"ruleId":"84","severity":1,"message":"89","line":3,"column":18,"nodeType":"86","messageId":"87","endLine":3,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":82,"column":22,"nodeType":"92","messageId":"93","endLine":82,"endColumn":24},{"ruleId":"79","severity":1,"message":"80","line":83,"column":17,"nodeType":"81","messageId":"82","endLine":83,"endColumn":19},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'current' is assigned a value but never used.","Identifier","unusedVar","'testShortestPathFinder' is defined but never used.","'ThemeConsumer' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]