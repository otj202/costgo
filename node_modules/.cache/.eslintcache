[{"C:\\Users\\joesande\\Desktop\\costgo\\src\\index.js":"1","C:\\Users\\joesande\\Desktop\\costgo\\src\\App.js":"2","C:\\Users\\joesande\\Desktop\\costgo\\src\\reportWebVitals.js":"3","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Header.jsx":"4","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Content.jsx":"5","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\sample.jsx":"6","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Path.jsx":"7","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\shortestPathFinder.js":"8","C:\\Users\\joesande\\Desktop\\costgo\\src\\test.js":"9","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Inventory.jsx":"10","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Button.jsx":"11","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Images.jsx":"12","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Item.jsx":"13","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Checkbox.jsx":"14","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Emoji.jsx":"15"},{"size":517,"mtime":1624979168066,"results":"16","hashOfConfig":"17"},{"size":629,"mtime":1625589000005,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1624979168067,"results":"19","hashOfConfig":"17"},{"size":675,"mtime":1625147192756,"results":"20","hashOfConfig":"17"},{"size":2448,"mtime":1625682991307,"results":"21","hashOfConfig":"17"},{"size":2462,"mtime":1625670589765,"results":"22","hashOfConfig":"17"},{"size":2198,"mtime":1625679621108,"results":"23","hashOfConfig":"17"},{"size":8553,"mtime":1625670052236,"results":"24","hashOfConfig":"17"},{"size":1481,"mtime":1625593552003,"results":"25","hashOfConfig":"17"},{"size":1870,"mtime":1625679621108,"results":"26","hashOfConfig":"17"},{"size":1434,"mtime":1625683419198,"results":"27","hashOfConfig":"17"},{"size":2696,"mtime":1625670351180,"results":"28","hashOfConfig":"17"},{"size":1864,"mtime":1625679621108,"results":"29","hashOfConfig":"17"},{"size":1511,"mtime":1625147192756,"results":"30","hashOfConfig":"17"},{"size":288,"mtime":1625679621108,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1rmdeky",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\joesande\\Desktop\\costgo\\src\\index.js",[],["66","67"],"C:\\Users\\joesande\\Desktop\\costgo\\src\\App.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\reportWebVitals.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Header.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Content.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\sample.jsx",["68","69","70"],"import React, { Component } from 'react';\r\nimport ShortestPathFinder from \"./shortestPathFinder.js\";\r\n\r\nimport map from '../data/map.json'\r\nimport tests from '../test.js' \r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n  background-color: #364C83;\r\n  border-radius: 20px;\r\n  margin-left: 7%;\r\n  margin-right: 7%;\r\n  height: 60vh;\r\n  display: flexbox;\r\n  justify-content: center; \r\n  align-items: center;\r\n  \r\n`;\r\n\r\n\r\nconsole.log(map[\"Chips\"]);\r\n\r\nclass Graph extends Component {\r\n\r\ncomponentDidMount(){\r\n    var c = document.getElementById(\"canvas\");\r\n    var ctx = c.getContext(\"2d\");\r\n\r\n\r\n    var total_aisle = 12;\r\n\r\n    var position = 0;\r\n    function drawAisle(aisleWidth, shelfWidth, shelfLength ){\r\n        ctx.fillStyle = 'brown';\r\n        for(let i = 0; i < total_aisle; i++){\r\n            ctx.beginPath();\r\n            ctx.fillRect(position, 30, shelfWidth, shelfLength);\r\n            position += shelfWidth+ aisleWidth;\r\n        }\r\n        \r\n    }\r\n\r\n    drawAisle(80,30,180);\r\n\r\n\r\n    var visited_array = {};\r\n    ctx.fillStyle = 'white';\r\n    for (var key in map) {\r\n        \r\n        if (map.hasOwnProperty(key)) {\r\n\r\n            visited_array[key] = false;\r\n\r\n            let id_str = key;\r\n            let x = map[key].x;\r\n            let y = map[key].y;\r\n            ctx.font = \"8px Arial\";\r\n            ctx.fillText(id_str.substring(0, 5), x, y);\r\n        }\r\n    }\r\n\r\n\r\n    function draw_path(array){\r\n\r\n        for(let i = 0; i < array.length; i++){\r\n            \r\n            if((i+1)!= array.length){\r\n                let curr_node = map[array[i]];\r\n                let next_node = map[array[i+1]]; \r\n    \r\n                ctx.strokeStyle = '#88F37F';\r\n                ctx.lineWidth = 3;\r\n                \r\n                // draw a red line\r\n\r\n                ctx.font = \"15px Arial\";\r\n                ctx.fillText(i+1, curr_node.x, curr_node.y);\r\n\r\n                ctx.beginPath();\r\n                ctx.moveTo(curr_node.x, curr_node.y);\r\n                ctx.lineTo(next_node.x, next_node.y);\r\n                ctx.stroke();\r\n    \r\n            }\r\n    \r\n    \r\n        }\r\n    } \r\n\r\n    //document.getElementById(\"items\").innerHTML= this.props.path;\r\n    draw_path(this.props.path);    \r\n\r\n\r\n}\r\n  render() {\r\n    return (\r\n        <Container>\r\n            <canvas  id=\"canvas\" width=\"1600\" height=\"400\"></canvas>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconsole.log(\"Heloooo!!!!\");\r\n\r\n\r\n\r\nexport default Graph;","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Path.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\shortestPathFinder.js",["71","72","73","74"],"import map from '../data/map.json';\r\n\r\nclass QElement{\r\n    constructor(element,priority){\r\n        this.element=element;\r\n        this.priority=priority;\r\n    }\r\n}\r\n\r\nclass PriorityQueue{\r\n    constructor(){\r\n        this.heap=[null];\r\n    }\r\n    isEmpty(){\r\n        return this.heap.length == 1;\r\n    }\r\n    enqueue(node,priority){\r\n  // creating object from queue element\r\n        var qElement = new QElement(node, priority);\r\n        this.heap.push(qElement);\r\n    \r\n    /* Finding the correct position for the new node */\r\n\r\n        if (this.heap.length > 1) {\r\n            let current = this.heap.length - 1\r\n        \r\n        /* Traversing up the parent node until the current node (current) is greater than the parent (current/2)*/\r\n            while (current > 1 && this.heap[Math.floor(current/2)].priority > this.heap[current].priority) {\r\n        \r\n            /* Swapping the two nodes by using the ES6 destructuring syntax*/\r\n                [this.heap[Math.floor(current/2)], this.heap[current]] = [this.heap[current], this.heap[Math.floor(current/2)]]\r\n                current = Math.floor(current/2)\r\n            }\r\n        }\r\n    }\r\n\r\n    dequeue(){\r\n        let smallest = this.heap[1]\r\n    \r\n        /* When there are more than two elements in the array, we put the right most element at the first position\r\n            and start comparing nodes with the child nodes\r\n        */\r\n        if (this.heap.length > 2) {\r\n            this.heap[1] = this.heap[this.heap.length-1]\r\n            this.heap.splice(this.heap.length - 1)\r\n    \r\n            if (this.heap.length === 3) {\r\n                if (this.heap[1].priority > this.heap[2].priority) {\r\n                    [this.heap[1], this.heap[2]] = [this.heap[2], this.heap[1]]\r\n                }\r\n                return smallest.element;\r\n            }\r\n    \r\n            let current = 1\r\n            let leftChildIndex = current * 2\r\n            let rightChildIndex = current * 2 + 1\r\n    \r\n            while (this.heap[leftChildIndex] &&\r\n                    this.heap[rightChildIndex] &&\r\n                    (this.heap[current].priority > this.heap[leftChildIndex].priority ||\r\n                        this.heap[current].priority > this.heap[rightChildIndex].priority)) {\r\n                if (this.heap[leftChildIndex].priority < this.heap[rightChildIndex].priority) {\r\n                    [this.heap[current], this.heap[leftChildIndex]] = [this.heap[leftChildIndex], this.heap[current]]\r\n                    current = leftChildIndex\r\n                } else {\r\n                    [this.heap[current], this.heap[rightChildIndex]] = [this.heap[rightChildIndex], this.heap[current]]\r\n                    current = rightChildIndex\r\n                }\r\n    \r\n                leftChildIndex = current * 2\r\n                rightChildIndex = current * 2 + 1\r\n            }\r\n        }\r\n        \r\n        /* If there are only two elements in the array, we directly splice out the first element */\r\n        \r\n        else if (this.heap.length === 2) {\r\n            this.heap.splice(1, 1)\r\n        } else {\r\n            return null\r\n        }\r\n    \r\n        return smallest.element;\r\n  \r\n    }\r\n}\r\n\r\nclass ShortestPathFinder{\r\n    constructor(){\r\n        this.map=map;\r\n    }\r\n\r\n    //@param items\r\n    //array of strings of names of items of shopping cart\r\n    getShortestPath(items){\r\n        //Start path on start node\r\n        let curItem = this.map.start; //curItem is a node\r\n        let path = [\"start\"]; //array of strings of names of items\r\n\r\n        while(items.length > 0) {\r\n            let dists = this.dijkstras(curItem);\r\n            let nextItem = this.searchForShortestItem(dists,items);\r\n            let pathToNextItem = [nextItem];\r\n            let curPathNode = nextItem;\r\n            while(dists[curPathNode].parent !== curItem.name) {\r\n                curPathNode = dists[curPathNode].parent;\r\n                pathToNextItem.unshift(curPathNode);       \r\n            }   \r\n\r\n            Array.prototype.push.apply(path, pathToNextItem)\r\n\r\n            curItem = this.map[nextItem];\r\n\r\n            //remove current item from items\r\n            const index = items.indexOf(curItem.name);\r\n            if (index > -1) {\r\n                items.splice(index, 1);\r\n            }\r\n        }\r\n        path.push(\"bottomAisle\"+this.map[path[path.length - 1]].aisle);\r\n        path.push(\"exit\")\r\n        return path;\r\n    }\r\n    dijkstras(node){\r\n        let dists={};\r\n        dists[node.name]={dist:0,parent:null};\r\n        let pq= new PriorityQueue();\r\n        pq.enqueue(node.name,0);\r\n        while (!pq.isEmpty()){\r\n            let dq=pq.dequeue();\r\n            let curr=this.map[dq];\r\n            for(const n of Object.keys(curr.neighbors)){\r\n                if(dists[n] === undefined || dists[n].dist > dists[curr.name].dist + curr.neighbors[n])\r\n                {\r\n                    dists[n] = {dist: dists[curr.name].dist + curr.neighbors[n],parent:curr.name};\r\n                    pq.enqueue(n,dists[n].dist);\r\n                }\r\n            }\r\n        }\r\n        return dists;\r\n        //in a loop, continually visit the closest unvisited node to root, relaxing all its neighbors.\r\n\r\n\r\n    }\r\n    searchForShortestItem(dists,items){\r\n        var item; \r\n        var minDistance = Number.MAX_VALUE; \r\n\r\n        for(let i = 0; i < items.length; i++){\r\n            if(dists[items[i]].dist < minDistance){\r\n                item = items[i]; \r\n                minDistance = dists[items[i]].dist;\r\n            }\r\n        }\r\n        \r\n        return item;\r\n    }\r\n}\r\n\r\nfunction equals(list1,list2){\r\n    if(list1.length != list2.length){\r\n        return false;\r\n    }\r\n    for(let i=0;i<list1.length;i++){\r\n        if(list1[i] != list2[i]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction testShortestPathFinder(){\r\n    let tests = [\r\n        {items:[\"Juices\",\"Bread\"],shortestPath:[\r\n            'start',\r\n            'topAisle9',\r\n            'Bread',\r\n            'bottomAisle9',\r\n            'bottomAisle10',\r\n            'Juices',\r\n            'bottomAisle10',\r\n            'exit'\r\n          ]},\r\n        {items:[\"Chips\",\"Nuts\",\"Candy\",\"CannedFish\"],shortestPath:[\r\n        'start','topAisle4',\r\n        'Candy',        'bottomAisle4',\r\n        'bottomAisle5', 'Chips',\r\n        'Nuts',         'topAisle5',\r\n        'topAisle6',    'topAisle7',\r\n        'CannedFish',   'bottomAisle7',\r\n        'exit']},\r\n        {items:[\"ProteinPowder\",\"Tea\",\"Coffee\",\"Oats\",\"DriedFruit\"],shortestPath:[  \r\n        'start',         'topAisle3',\r\n        'ProteinPowder', 'bottomAisle3',\r\n        'bottomAisle4',  'bottomAisle5',\r\n        'bottomAisle6',  'DriedFruit',\r\n        'topAisle6',     'topAisle7',\r\n        'topAisle8',     'topAisle9',\r\n        'topAisle10',    'Oats',\r\n        'topAisle10',    'topAisle11',\r\n        'Tea',           'Coffee',\r\n        'bottomAisle11', 'exit']},\r\n        {items:[\"Olives\",\"Beans\",\"Oil\",\"Rice\",\"Tea\",\"NutBars\"],shortestPath:[\r\n            'start',         'topAisle3',\r\n            'NutBars',       'bottomAisle3',\r\n            'bottomAisle4',  'bottomAisle5',\r\n            'bottomAisle6',  'Rice',\r\n            'bottomAisle6',  'bottomAisle7',\r\n            'Olives',        'Beans',\r\n            'topAisle7',     'topAisle8',\r\n            'Oil',           'topAisle8',\r\n            'topAisle9',     'topAisle10',\r\n            'topAisle11',    'Tea',\r\n            'bottomAisle11', 'exit']},\r\n        {items:[\"BabyProducts\",\"ChildSupplements\",\"Condiments\",\"Coffee\",\"Sugar\",\"PeanutButter\",\"Cereal\"],shortestPath:[\r\n            'start',         'topAisle2',\r\n            'BabyProducts',  'ChildSupplements',\r\n            'bottomAisle2',  'bottomAisle3',\r\n            'bottomAisle4',  'bottomAisle5',\r\n            'bottomAisle6',  'bottomAisle7',\r\n            'Condiments',    'bottomAisle7',\r\n            'bottomAisle8',  'Sugar',\r\n            'bottomAisle8',  'bottomAisle9',\r\n            'Cereal',        'bottomAisle9',\r\n            'bottomAisle10', 'PeanutButter',\r\n            'bottomAisle10', 'bottomAisle11',\r\n            'Coffee',        'bottomAisle11',\r\n            'exit']}\r\n    ]\r\n    let spf = new ShortestPathFinder();\r\n    for (const test of tests){\r\n        let path=spf.getShortestPath(test.items);\r\n        console.log(\"found the path:\",path);\r\n        if(!equals(path,test.shortestPath)){\r\n            console.log(\"failed this test!:\",test);\r\n        } \r\n        else{\r\n            console.log(\"test passed\");\r\n        }\r\n    }\r\n}\r\n//testShortestPathFinder();\r\nexport default ShortestPathFinder;","C:\\Users\\joesande\\Desktop\\costgo\\src\\test.js",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Inventory.jsx",["75","76"],"import React, { Component } from 'react';\r\nimport Item from './Item.jsx';\r\nimport styled from 'styled-components';\r\nimport data from '../data/map.json';\r\nimport images from './Images.jsx';\r\n\r\nconst Container = styled.div`\r\n  @import url('https://fonts.googleapis.com/css2?family=Nunito&display=swap');\r\n  \r\n  background-color: #364C83;\r\n  border-radius: 20px;\r\n  margin-left: 7%;\r\n  margin-right: 7%;\r\n  margin-top: 30px;\r\n  height: 60vh;\r\n  overflow: scroll;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  padding-top: 2%;\r\n  padding-left: 15%;\r\n  font-family: 'Nunito', sans-serif;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Section = styled.h3`\r\n  color: white;\r\n  padding-top: 2%;\r\n  padding-left: 15%;\r\n  font-family: 'Nunito', sans-serif;\r\n`;\r\n\r\nclass Inventory extends Component {\r\n  \r\n  render() {\r\n    var arr = [];\r\n    Object.keys(data).forEach(function(key) {\r\n      //console.log(key + ' - ' + data[key].connectorType);\r\n      //console.log(key + ' - ' + data[key].rating);\r\n      if (data[key].connectorType == null) {\r\n        arr.push(data[key]);\r\n      }\r\n    });\r\n    var current = \"\";\r\n    let list = [];\r\n\r\n    arr.map(item => {\r\n      if (item.category == current) {\r\n        list.push(<Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>)\r\n      } else {\r\n        current = item.category;\r\n        list.push(<>\r\n              <Section>{item.category}</Section>\r\n              <Item key={item.name} name={item.name} img={images[item.name]} onItemChanged={this.props.onItemChanged} category={item.category} rating={item.rating} price={item.price}/>\r\n              </>)\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Container>\r\n        <Title>Inventory</Title>\r\n        {list}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Button.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Images.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Item.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Checkbox.jsx",[],"C:\\Users\\joesande\\Desktop\\costgo\\src\\components\\Emoji.jsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":69,"column":21,"nodeType":"88","messageId":"89","endLine":69,"endColumn":23},{"ruleId":"86","severity":1,"message":"90","line":15,"column":33,"nodeType":"88","messageId":"89","endLine":15,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":161,"column":21,"nodeType":"88","messageId":"89","endLine":161,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":165,"column":21,"nodeType":"88","messageId":"89","endLine":165,"endColumn":23},{"ruleId":"81","severity":1,"message":"91","line":171,"column":10,"nodeType":"83","messageId":"84","endLine":171,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":48,"column":18,"nodeType":"94","messageId":"95","endLine":48,"endColumn":20},{"ruleId":"86","severity":1,"message":"90","line":49,"column":25,"nodeType":"88","messageId":"89","endLine":49,"endColumn":27},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'ShortestPathFinder' is defined but never used.","Identifier","unusedVar","'tests' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'testShortestPathFinder' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]